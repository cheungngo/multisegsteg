% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stegmented.R
\name{multi_stegmented}
\alias{multi_stegmented}
\title{Fit a multiple threshold step-segmented regression model}
\usage{
multi_stegmented(
  formula.1,
  formula.2,
  family,
  data,
  n_thresholds = 1,
  lb.quantile = 0.05,
  ub.quantile = 0.95,
  grid.search.max = Inf,
  cluster_var = NULL,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{formula.1}{Formula. Specifies the relationship between the response variable
and covariates (excluding the threshold terms).}

\item{formula.2}{Formula. Specifies the threshold variable (right-hand side only).}

\item{family}{Character. Distribution family for the response variable.
Currently supports "gaussian" for continuous outcomes and "binomial" for binary outcomes.}

\item{data}{Data frame. Contains all variables in the model.}

\item{n_thresholds}{Integer. Number of thresholds to estimate. Default is 1.}

\item{lb.quantile}{Numeric. Lower bound quantile for candidate thresholds. Default is 0.05.}

\item{ub.quantile}{Numeric. Upper bound quantile for candidate thresholds. Default is 0.95.}

\item{grid.search.max}{Numeric. Maximum number of candidate threshold values
to consider. Default is Inf (all unique values in the specified range).}

\item{cluster_var}{Character. Name of the cluster variable for computing
cluster-robust standard errors. Default is NULL.}

\item{verbose}{Logical. Whether to print progress information during the grid search. Default is FALSE.}

\item{...}{Additional arguments passed to internal fitting functions.}
}
\value{
A list containing the following components:
\item{thresholds}{Numeric vector of estimated threshold values}
\item{fit}{Model fit object (lm for gaussian family or glm for binomial family)}
\item{loglik}{Log-likelihood value for the optimal model}
\item{all_logliks}{Numeric vector of log-likelihood values for all threshold combinations evaluated}
\item{all_combinations}{Matrix of all threshold combinations evaluated}
\item{vcov_cluster}{Variance-covariance matrix with cluster-robust standard errors (if cluster_var provided)}
\item{se_cluster}{Cluster-robust standard errors (if cluster_var provided)}
}
\description{
Fits a step-segmented (stegmented) regression model with multiple thresholds
that allows for both discontinuities (steps) and changes in slope at the threshold
points. The function employs a grid search approach to identify optimal threshold
values that maximize the model's log-likelihood.
}
\details{
The stegmented regression model implemented here follows the form:
\deqn{y = X\beta + \sum_{j=1}^{k} \alpha_j I(z > e_j) + \sum_{j=1}^{k} \gamma_j (z - e_j)_+ + \epsilon}
where \eqn{I(z > e_j)} is an indicator function, \eqn{(z - e_j)_+ = \max(0, z - e_j)},
\eqn{e_j} are the threshold values, \eqn{k} is the number of thresholds, and \eqn{X}
represents covariates from formula.1.

This model extends the standard segmented regression by allowing jumps (discontinuities)
at the threshold points in addition to changes in slope. The \eqn{\alpha_j} parameters
control the size of the jumps, while the \eqn{\gamma_j} parameters control the changes in slope.

The function evaluates all combinations of thresholds within the specified quantile
range of the threshold variable and selects the combination that maximizes the
log-likelihood. For models with clustered data, cluster-robust standard errors
are calculated using the sandwich package.
}
\examples{
# Generate example data with both steps and slope changes
set.seed(123)
n <- 200
x <- runif(n, 0, 10)
z <- rnorm(n)
# Data with steps at x=3 and x=7, and changes in slope at the same points
y <- 1 + 0.5 * z + 0 * x + 2 * (x > 3) + 1 * pmax(x - 3, 0) +
     3 * (x > 7) + 2 * pmax(x - 7, 0) + rnorm(n)
data <- data.frame(y = y, x = x, z = z, cluster = rep(1:20, each = 10))

# Fit stegmented model with two thresholds
result <- multi_stegmented(
  formula.1 = y ~ z,
  formula.2 = ~ x,
  family = "gaussian",
  data = data,
  n_thresholds = 2
)

# Print the estimated thresholds
print(result$thresholds)

# Fit with cluster-robust standard errors
result_clustered <- multi_stegmented(
  formula.1 = y ~ z,
  formula.2 = ~ x,
  family = "gaussian",
  data = data,
  n_thresholds = 2,
  cluster_var = "cluster"
)

# Access cluster-robust standard errors
print(result_clustered$se_cluster)

}
\seealso{
\code{\link{plot_multi_stegmented}} for visualizing the results

\code{\link{multi_segmented}} for fitting continuous segmented regression models
}
